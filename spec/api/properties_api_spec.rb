=begin
#Bitbucket API

#Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.

The version of the OpenAPI document: 2.0
Contact: support@bitbucket.org
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.1.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Bitbucket::PropertiesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PropertiesApi' do
  before do
    # run before each test
    @api_instance = Bitbucket::PropertiesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PropertiesApi' do
    it 'should create an instance of PropertiesApi' do
      expect(@api_instance).to be_instance_of(Bitbucket::PropertiesApi)
    end
  end

  # unit tests for delete_commit_hosted_property_value
  # Delete a commit application property
  # Delete an [application property](/cloud/bitbucket/application-properties/) value stored against a commit.
  # @param workspace The repository container; either the workspace slug or the UUID in curly braces.
  # @param repo_slug The repository.
  # @param commit The commit.
  # @param app_key The key of the Connect app.
  # @param property_name The name of the property.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_commit_hosted_property_value test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_pull_request_hosted_property_value
  # Delete a pull request application property
  # Delete an [application property](/cloud/bitbucket/application-properties/) value stored against a pull request.
  # @param workspace The repository container; either the workspace slug or the UUID in curly braces.
  # @param repo_slug The repository.
  # @param pullrequest_id The pull request ID.
  # @param app_key The key of the Connect app.
  # @param property_name The name of the property.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_pull_request_hosted_property_value test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_repository_hosted_property_value
  # Delete a repository application property
  # Delete an [application property](/cloud/bitbucket/application-properties/) value stored against a repository.
  # @param workspace The repository container; either the workspace slug or the UUID in curly braces.
  # @param repo_slug The repository.
  # @param app_key The key of the Connect app.
  # @param property_name The name of the property.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_repository_hosted_property_value test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_user_hosted_property_value
  # Delete a user application property
  # Delete an [application property](/cloud/bitbucket/application-properties/) value stored against a user.
  # @param selected_user Either the UUID of the account surrounded by curly-braces, for example &#x60;{account UUID}&#x60;, OR an Atlassian Account ID.
  # @param app_key The key of the Connect app.
  # @param property_name The name of the property.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user_hosted_property_value test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_commit_hosted_property_value
  # Get a commit application property
  # Retrieve an [application property](/cloud/bitbucket/application-properties/) value stored against a commit.
  # @param workspace The repository container; either the workspace slug or the UUID in curly braces.
  # @param repo_slug The repository.
  # @param commit The commit.
  # @param app_key The key of the Connect app.
  # @param property_name The name of the property.
  # @param [Hash] opts the optional parameters
  # @return [ApplicationProperty]
  describe 'get_commit_hosted_property_value test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_pull_request_hosted_property_value
  # Get a pull request application property
  # Retrieve an [application property](/cloud/bitbucket/application-properties/) value stored against a pull request.
  # @param workspace The repository container; either the workspace slug or the UUID in curly braces.
  # @param repo_slug The repository.
  # @param pullrequest_id The pull request ID.
  # @param app_key The key of the Connect app.
  # @param property_name The name of the property.
  # @param [Hash] opts the optional parameters
  # @return [ApplicationProperty]
  describe 'get_pull_request_hosted_property_value test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_repository_hosted_property_value
  # Get a repository application property
  # Retrieve an [application property](/cloud/bitbucket/application-properties/) value stored against a repository.
  # @param workspace The repository container; either the workspace slug or the UUID in curly braces.
  # @param repo_slug The repository.
  # @param app_key The key of the Connect app.
  # @param property_name The name of the property.
  # @param [Hash] opts the optional parameters
  # @return [ApplicationProperty]
  describe 'get_repository_hosted_property_value test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retrieve_user_hosted_property_value
  # Get a user application property
  # Retrieve an [application property](/cloud/bitbucket/application-properties/) value stored against a user.
  # @param selected_user Either the UUID of the account surrounded by curly-braces, for example &#x60;{account UUID}&#x60;, OR an Atlassian Account ID.
  # @param app_key The key of the Connect app.
  # @param property_name The name of the property.
  # @param [Hash] opts the optional parameters
  # @return [ApplicationProperty]
  describe 'retrieve_user_hosted_property_value test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_commit_hosted_property_value
  # Update a commit application property
  # Update an [application property](/cloud/bitbucket/application-properties/) value stored against a commit.
  # @param workspace The repository container; either the workspace slug or the UUID in curly braces.
  # @param repo_slug The repository.
  # @param commit The commit.
  # @param app_key The key of the Connect app.
  # @param property_name The name of the property.
  # @param request_body The application property to create or update.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_commit_hosted_property_value test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_pull_request_hosted_property_value
  # Update a pull request application property
  # Update an [application property](/cloud/bitbucket/application-properties/) value stored against a pull request.
  # @param workspace The repository container; either the workspace slug or the UUID in curly braces.
  # @param repo_slug The repository.
  # @param pullrequest_id The pull request ID.
  # @param app_key The key of the Connect app.
  # @param property_name The name of the property.
  # @param request_body The application property to create or update.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_pull_request_hosted_property_value test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_repository_hosted_property_value
  # Update a repository application property
  # Update an [application property](/cloud/bitbucket/application-properties/) value stored against a repository.
  # @param workspace The repository container; either the workspace slug or the UUID in curly braces.
  # @param repo_slug The repository.
  # @param app_key The key of the Connect app.
  # @param property_name The name of the property.
  # @param request_body The application property to create or update.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_repository_hosted_property_value test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user_hosted_property_value
  # Update a user application property
  # Update an [application property](/cloud/bitbucket/application-properties/) value stored against a user.
  # @param selected_user Either the UUID of the account surrounded by curly-braces, for example &#x60;{account UUID}&#x60;, OR an Atlassian Account ID.
  # @param app_key The key of the Connect app.
  # @param property_name The name of the property.
  # @param request_body The application property to create or update.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_user_hosted_property_value test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
