=begin
#Bitbucket API

#Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.

The version of the OpenAPI document: 2.0
Contact: support@bitbucket.org
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.1.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Bitbucket::DownloadsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DownloadsApi' do
  before do
    # run before each test
    @api_instance = Bitbucket::DownloadsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DownloadsApi' do
    it 'should create an instance of DownloadsApi' do
      expect(@api_instance).to be_instance_of(Bitbucket::DownloadsApi)
    end
  end

  # unit tests for repositories_workspace_repo_slug_downloads_filename_delete
  # Delete a download artifact
  # Deletes the specified download artifact from the repository.
  # @param filename Name of the file.
  # @param repo_slug This can either be the repository slug or the UUID of the repository, surrounded by curly-braces, for example: &#x60;{repository UUID}&#x60;. 
  # @param workspace This can either be the workspace ID (slug) or the workspace UUID surrounded by curly-braces, for example: &#x60;{workspace UUID}&#x60;. 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'repositories_workspace_repo_slug_downloads_filename_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for repositories_workspace_repo_slug_downloads_filename_get
  # Get a download artifact link
  # Return a redirect to the contents of a download artifact.  This endpoint returns the actual file contents and not the artifact&#39;s metadata.      $ curl -s -L https://api.bitbucket.org/2.0/repositories/evzijst/git-tests/downloads/hello.txt     Hello World
  # @param filename Name of the file.
  # @param repo_slug This can either be the repository slug or the UUID of the repository, surrounded by curly-braces, for example: &#x60;{repository UUID}&#x60;. 
  # @param workspace This can either be the workspace ID (slug) or the workspace UUID surrounded by curly-braces, for example: &#x60;{workspace UUID}&#x60;. 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'repositories_workspace_repo_slug_downloads_filename_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for repositories_workspace_repo_slug_downloads_get
  # List download artifacts
  # Returns a list of download links associated with the repository.
  # @param repo_slug This can either be the repository slug or the UUID of the repository, surrounded by curly-braces, for example: &#x60;{repository UUID}&#x60;. 
  # @param workspace This can either be the workspace ID (slug) or the workspace UUID surrounded by curly-braces, for example: &#x60;{workspace UUID}&#x60;. 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'repositories_workspace_repo_slug_downloads_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for repositories_workspace_repo_slug_downloads_post
  # Upload a download artifact
  # Upload new download artifacts.  To upload files, perform a &#x60;multipart/form-data&#x60; POST containing one or more &#x60;files&#x60; fields:      $ echo Hello World &gt; hello.txt     $ curl -s -u evzijst -X POST https://api.bitbucket.org/2.0/repositories/evzijst/git-tests/downloads -F files&#x3D;@hello.txt  When a file is uploaded with the same name as an existing artifact, then the existing file will be replaced.
  # @param repo_slug This can either be the repository slug or the UUID of the repository, surrounded by curly-braces, for example: &#x60;{repository UUID}&#x60;. 
  # @param workspace This can either be the workspace ID (slug) or the workspace UUID surrounded by curly-braces, for example: &#x60;{workspace UUID}&#x60;. 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'repositories_workspace_repo_slug_downloads_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
